<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/app/Dashboard/PromptPage/page.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/app/Dashboard/PromptPage/page.tsx" />
              <option name="originalContent" value="import React from 'react';&#10;import VercelV0Chat from &quot;@/components/mvpblocks/v0-chat&quot;;&#10;&#10;function Page() {&#10;    return (&#10;        &lt;section className=&quot;w-full min-h-screen flex justify-center items-start pt-8 p-4&quot;&gt;&#10;            &lt;VercelV0Chat/&gt;&#10;        &lt;/section&gt;&#10;    );&#10;}&#10;&#10;export default Page;" />
              <option name="updatedContent" value="import React from 'react';&#10;import VercelV0Chat from &quot;@/components/mvpblocks/v0-chat&quot;;&#10;&#10;function Page() {&#10;    return (&#10;        &lt;section className=&quot;w-full min-h-screen flex justify-center items-start pt-8 p-4&quot;&gt;&#10;            &lt;VercelV0Chat/&gt;&#10;        &lt;/section&gt;&#10;    );&#10;}&#10;&#10;export default Page;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/components/mvpblocks/Sign-form-3.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/components/mvpblocks/Sign-form-3.tsx" />
              <option name="originalContent" value="'use client';&#10;&#10;import { useState } from 'react';&#10;import {&#10;  Mail,&#10;  Lock,&#10;  Eye,&#10;  EyeOff,&#10;  Loader2,&#10;  Brain,&#10;  Target,&#10;  Zap,&#10;  CheckCircle,&#10;  Github,&#10;} from 'lucide-react';&#10;&#10;export default function SignInPage2() {&#10;  const [name, setName] = useState('');&#10;  const [email, setEmail] = useState('');&#10;  const [password, setPassword] = useState('');&#10;  const [showPassword, setShowPassword] = useState(false);&#10;  const [loading, setLoading] = useState(false);&#10;&#10;  const handleSubmit = (e: React.FormEvent) =&gt; {&#10;    e.preventDefault();&#10;    setLoading(true);&#10;    setTimeout(() =&gt; {&#10;      alert('Login successful! (This is a demo)');&#10;      setLoading(false);&#10;    }, 2000);&#10;  };&#10;&#10;  return (&#10;    &lt;div className=&quot;relative flex min-h-screen w-full items-center justify-center overflow-hidden p-4&quot;&gt;&#10;      &lt;style jsx&gt;{`&#10;        .login-btn {&#10;          background: linear-gradient(&#10;            135deg,&#10;            var(--color-Primary) 0%,&#10;            var(--color-Accent) 50%,&#10;            var(--color-Secondary) 100%&#10;          );&#10;          position: relative;&#10;          overflow: hidden;&#10;        }&#10;        .login-btn::before {&#10;          content: '';&#10;          position: absolute;&#10;          top: 0;&#10;          left: -100%;&#10;          width: 100%;&#10;          height: 100%;&#10;          background: linear-gradient(&#10;            90deg,&#10;            transparent,&#10;            rgba(182, 245, 0, 0.25),&#10;            rgba(152, 205, 0, 0.25),&#10;            transparent&#10;          );&#10;          transition: left 0.5s;&#10;        }&#10;        .login-btn:hover {&#10;          background: linear-gradient(135deg, var(--color-Accent) 0%, var(--color-Primary) 100%);&#10;        }&#10;        .login-btn:hover::before {&#10;          left: 100%;&#10;        }&#10;      `}&lt;/style&gt;&#10;&#10;      &lt;div className=&quot;z-10 w-full max-w-6xl&quot;&gt;&#10;        &lt;div className=&quot;bg-[var(--color-Secondary)]/60 overflow-hidden rounded-[40px] shadow-2xl border-4 border-[var(--color-Accent)]&quot;&gt;&#10;          &lt;div className=&quot;grid min-h-[700px] lg:grid-cols-2 bg-[var(--color-Background)]&quot;&gt;&#10;            {/* Left Side */}&#10;            &lt;div className=&quot;brand-side relative m-4 rounded-3xl bg-[url('https://cdn.midjourney.com/299f94f9-ecb9-4b26-bead-010b8d8b01d9/0_0.png?w=800&amp;q=80')] bg-cover p-12 text-[var(--color-Neutral2)] shadow-lg border-2 border-[var(--color-Primary)]&quot;&gt;&#10;              &lt;div&gt;&#10;                &lt;div className=&quot;mb-12 text-lg font-semibold uppercase text-[var(--color-Primary)] drop-shadow-lg&quot;&gt;&#10;                  {/*PixelForge Studio*/}&#10;                &lt;/div&gt;&#10;                &lt;h1 className=&quot;mb-4 text-6xl font-medium text-[var(--color-Neutral)]&quot;&gt;&#10;                  Create, Design, and Innovate&#10;                &lt;/h1&gt;&#10;                &lt;p className=&quot;mb-12 text-xl opacity-80 text-[var(--color-Neutral2)]&quot;&gt;&#10;                  Join thousands of creators who trust PixelForge Studio to&#10;                  bring their vision to life&#10;                &lt;/p&gt;&#10;&#10;                &lt;div className=&quot;space-y-6&quot;&gt;&#10;                  {[&#10;                    {&#10;                      icon: &lt;Brain size={16} /&gt;,&#10;                      title: 'AI-Powered Planning',&#10;                      desc: 'Generate smart, adaptive roadmaps for any project.',&#10;                    },&#10;                    {&#10;                      icon: &lt;Target size={16} /&gt;,&#10;                      title: 'Goal Tracking',&#10;                      desc: 'Set milestones and monitor progress with intelligent insights.',&#10;                    },&#10;                    {&#10;                      icon: &lt;Zap size={16} /&gt;,&#10;                      title: 'Instant Suggestions',&#10;                      desc: 'Get actionable steps and recommendations from AI.',&#10;                    },&#10;                    {&#10;                      icon: &lt;CheckCircle size={16} /&gt;,&#10;                      title: 'Collaboration',&#10;                      desc: 'Work with your team in real-time to build and refine your roadmap.',&#10;                    },&#10;                  ].map(({ icon, title, desc }, i) =&gt; (&#10;                    &lt;div&#10;                      key={i}&#10;                      className=&quot;feature-item animate-fadeInUp flex items-center&quot;&#10;                      style={{ animationDelay: `${0.2 * (i + 1)}s` }}&#10;                    &gt;&#10;                      &lt;div className=&quot;mr-4 flex h-8 w-8 items-center justify-center rounded-lg bg-white/20 text-white backdrop-blur-sm&quot;&gt;&#10;                        {icon}&#10;                      &lt;/div&gt;&#10;                      &lt;div&gt;&#10;                        &lt;div className=&quot;font-semibold&quot;&gt;{title}&lt;/div&gt;&#10;                        &lt;div className=&quot;text-sm opacity-70&quot;&gt;{desc}&lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  ))}&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            {/* Right Side */}&#10;            &lt;div className=&quot;flex flex-col justify-center p-12&quot;&gt;&#10;              &lt;div className=&quot;mx-auto w-full max-w-md&quot;&gt;&#10;                &lt;div className=&quot;mb-8 text-center&quot;&gt;&#10;                  &lt;h2 className=&quot;text-3xl font-light uppercase&quot;&gt;&#10;                    Welcome back&#10;                  &lt;/h2&gt;&#10;                  &lt;p className=&quot;mt-2 text-sm text-stone-600&quot;&gt;&#10;                    Sign in to continue your creative journey&#10;                  &lt;/p&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;form onSubmit={handleSubmit} className=&quot;space-y-6&quot;&gt;&#10;                  &lt;div&gt;&#10;                    &lt;label&#10;                      htmlFor=&quot;name&quot;&#10;                      className=&quot;mb-2 block text-sm font-medium uppercase&quot;&#10;                    &gt;&#10;                      Name&#10;                    &lt;/label&gt;&#10;                    &lt;div className=&quot;relative&quot;&gt;&#10;                      &lt;div className=&quot;pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3&quot;&gt;&#10;                        {/* You can use a user icon here if desired */}&#10;                      &lt;/div&gt;&#10;                      &lt;input&#10;                        id=&quot;name&quot;&#10;                        type=&quot;text&quot;&#10;                        value={name}&#10;                        onChange={(e) =&gt; setName(e.target.value)}&#10;                        required&#10;                        className=&quot;border-border bg-input block w-full rounded-lg border py-3 pr-3 pl-10 text-sm&quot;&#10;                        placeholder=&quot;Enter your name&quot;&#10;                      /&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div&gt;&#10;                    &lt;label&#10;                      htmlFor=&quot;email&quot;&#10;                      className=&quot;mb-2 block text-sm font-medium uppercase&quot;&#10;                    &gt;&#10;                      Email address&#10;                    &lt;/label&gt;&#10;                    &lt;div className=&quot;relative&quot;&gt;&#10;                      &lt;div className=&quot;pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3&quot;&gt;&#10;                        &lt;Mail className=&quot;h-5 w-5 text-gray-400&quot; /&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;input&#10;                        id=&quot;email&quot;&#10;                        type=&quot;email&quot;&#10;                        value={email}&#10;                        onChange={(e) =&gt; setEmail(e.target.value)}&#10;                        required&#10;                        className=&quot;border-border bg-input block w-full rounded-lg border py-3 pr-3 pl-10 text-sm&quot;&#10;                        placeholder=&quot;Enter your email&quot;&#10;                      /&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div&gt;&#10;                    &lt;label&#10;                      htmlFor=&quot;password&quot;&#10;                      className=&quot;mb-2 block text-sm font-medium uppercase&quot;&#10;                    &gt;&#10;                      Password&#10;                    &lt;/label&gt;&#10;                    &lt;div className=&quot;relative&quot;&gt;&#10;                      &lt;div className=&quot;pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3&quot;&gt;&#10;                        &lt;Lock className=&quot;h-5 w-5 text-gray-400&quot; /&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;input&#10;                        id=&quot;password&quot;&#10;                        type={showPassword ? 'text' : 'password'}&#10;                        value={password}&#10;                        onChange={(e) =&gt; setPassword(e.target.value)}&#10;                        required&#10;                        className=&quot;border-border bg-input block w-full rounded-lg border py-3 pr-12 pl-10 text-sm&quot;&#10;                        placeholder=&quot;Enter your password&quot;&#10;                      /&gt;&#10;                      &lt;button&#10;                        type=&quot;button&quot;&#10;                        className=&quot;absolute inset-y-0 right-0 flex items-center pr-3&quot;&#10;                        onClick={() =&gt; setShowPassword(!showPassword)}&#10;                      &gt;&#10;                        {showPassword ? (&#10;                          &lt;EyeOff className=&quot;h-5 w-5 text-gray-400&quot; /&gt;&#10;                        ) : (&#10;                          &lt;Eye className=&quot;h-5 w-5 text-gray-400&quot; /&gt;&#10;                        )}&#10;                      &lt;/button&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;                    &lt;label className=&quot;text-muted-foreground flex items-center text-sm&quot;&gt;&#10;                      &lt;input&#10;                        type=&quot;checkbox&quot;&#10;                        className=&quot;border-border text-primary h-4 w-4 rounded&quot;&#10;                      /&gt;&#10;                      &lt;span className=&quot;ml-2&quot;&gt;Remember me&lt;/span&gt;&#10;                    &lt;/label&gt;&#10;                    &lt;a&#10;                      href=&quot;#&quot;&#10;                      className=&quot;text-primary hover:text-primary/80 text-sm&quot;&#10;                    &gt;&#10;                      Forgot password?&#10;                    &lt;/a&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;button&#10;                    type=&quot;submit&quot;&#10;                    className=&quot;login-btn relative flex w-full items-center justify-center rounded-lg px-4 py-3 text-sm font-medium text-white transition-all duration-300&quot;&#10;                    disabled={loading}&#10;                  &gt;&#10;                    {loading ? (&#10;                      &lt;&gt;&#10;                        &lt;Loader2 className=&quot;h-5 w-5 animate-spin&quot; /&gt;&#10;                        &lt;span className=&quot;ml-2&quot;&gt;Signing in...&lt;/span&gt;&#10;                      &lt;/&gt;&#10;                    ) : (&#10;                      'Sign in to your account'&#10;                    )}&#10;                  &lt;/button&gt;&#10;&#10;                  &lt;div className=&quot;relative text-center text-sm text-stone-500&quot;&gt;&#10;                    &lt;div className=&quot;absolute inset-0 flex items-center&quot;&gt;&#10;                      &lt;div className=&quot;border-border w-full border-t&quot;&gt;&lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;span className=&quot;relative px-2&quot;&gt;Or continue with&lt;/span&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div className=&quot;grid grid-cols-2 gap-3&quot;&gt;&#10;                    &lt;button&#10;                      type=&quot;button&quot;&#10;                      className=&quot;border-border bg-secondary text-foreground hover:bg-secondary/80 flex items-center justify-center rounded-lg border px-4 py-2.5 text-sm shadow-sm&quot;&#10;                    &gt;&#10;                      &lt;img&#10;                        src=&quot;https://www.svgrepo.com/show/475656/google-color.svg&quot;&#10;                        className=&quot;h-5 w-5&quot;&#10;                        alt=&quot;Google&quot;&#10;                      /&gt;&#10;                      &lt;span className=&quot;ml-2&quot;&gt;Google&lt;/span&gt;&#10;                    &lt;/button&gt;&#10;                    &lt;button&#10;                      type=&quot;button&quot;&#10;                      className=&quot;border-border bg-secondary text-foreground hover:bg-secondary/80 flex items-center justify-center rounded-lg border px-4 py-2.5 text-sm shadow-sm&quot;&#10;                    &gt;&#10;                      &lt;Github className=&quot;h-5 w-5&quot; /&gt;&#10;                      &lt;span className=&quot;ml-2&quot;&gt;GitHub&lt;/span&gt;&#10;                    &lt;/button&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/form&gt;&#10;&#10;                &lt;div className=&quot;text-muted-foreground mt-8 text-center text-sm&quot;&gt;&#10;                  Don&amp;apos;t have an account?{' '}&#10;                  &lt;a href=&quot;#&quot; className=&quot;text-primary hover:text-primary/80&quot;&gt;&#10;                    Sign up for free&#10;                  &lt;/a&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}&#10;" />
              <option name="updatedContent" value="'use client';&#10;&#10;import { useState } from 'react';&#10;import {&#10;  Mail,&#10;  Lock,&#10;  Eye,&#10;  EyeOff,&#10;  Loader2,&#10;  Brain,&#10;  Target,&#10;  Zap,&#10;  CheckCircle,&#10;  Github,&#10;} from 'lucide-react';&#10;&#10;export default function SignInPage2() {&#10;  const [name, setName] = useState('');&#10;  const [email, setEmail] = useState('');&#10;  const [password, setPassword] = useState('');&#10;  const [showPassword, setShowPassword] = useState(false);&#10;  const [loading, setLoading] = useState(false);&#10;&#10;  const handleSubmit = (e: React.FormEvent) =&gt; {&#10;    e.preventDefault();&#10;    setLoading(true);&#10;    setTimeout(() =&gt; {&#10;      alert('Login successful! (This is a demo)');&#10;      setLoading(false);&#10;    }, 2000);&#10;  };&#10;&#10;  return (&#10;    &lt;div className=&quot;relative flex min-h-screen w-full items-center justify-center overflow-hidden p-4&quot;&gt;&#10;      &lt;style jsx&gt;{`&#10;        .login-btn {&#10;          background: linear-gradient(&#10;            135deg,&#10;            var(--color-Primary) 0%,&#10;            var(--color-Accent) 50%,&#10;            var(--color-Secondary) 100%&#10;          );&#10;          position: relative;&#10;          overflow: hidden;&#10;        }&#10;        .login-btn::before {&#10;          content: '';&#10;          position: absolute;&#10;          top: 0;&#10;          left: -100%;&#10;          width: 100%;&#10;          height: 100%;&#10;          background: linear-gradient(&#10;            90deg,&#10;            transparent,&#10;            rgba(182, 245, 0, 0.25),&#10;            rgba(152, 205, 0, 0.25),&#10;            transparent&#10;          );&#10;          transition: left 0.5s;&#10;        }&#10;        .login-btn:hover {&#10;          background: linear-gradient(135deg, var(--color-Accent) 0%, var(--color-Primary) 100%);&#10;        }&#10;        .login-btn:hover::before {&#10;          left: 100%;&#10;        }&#10;      `}&lt;/style&gt;&#10;&#10;      &lt;div className=&quot;z-10 w-full max-w-6xl&quot;&gt;&#10;        &lt;div className=&quot;bg-[var(--color-Secondary)]/60 overflow-hidden rounded-[40px] shadow-2xl border-4 border-[var(--color-Accent)]&quot;&gt;&#10;          &lt;div className=&quot;grid min-h-[700px] lg:grid-cols-2 bg-[var(--color-Background)]&quot;&gt;&#10;            {/* Left Side */}&#10;            &lt;div className=&quot;brand-side relative m-4 rounded-3xl bg-[url('https://cdn.midjourney.com/299f94f9-ecb9-4b26-bead-010b8d8b01d9/0_0.png?w=800&amp;q=80')] bg-cover p-12 text-[var(--color-Neutral2)] shadow-lg border-2 border-[var(--color-Primary)]&quot;&gt;&#10;              &lt;div&gt;&#10;                &lt;div className=&quot;mb-12 text-lg font-semibold uppercase text-[var(--color-Primary)] drop-shadow-lg&quot;&gt;&#10;                  {/*PixelForge Studio*/}&#10;                &lt;/div&gt;&#10;                &lt;h1 className=&quot;mb-4 text-6xl font-medium text-[var(--color-Neutral)]&quot;&gt;&#10;                  Create, Design, and Innovate&#10;                &lt;/h1&gt;&#10;                &lt;p className=&quot;mb-12 text-xl opacity-80 text-[var(--color-Neutral2)]&quot;&gt;&#10;                  Join thousands of creators who trust PixelForge Studio to&#10;                  bring their vision to life&#10;                &lt;/p&gt;&#10;&#10;                &lt;div className=&quot;space-y-6&quot;&gt;&#10;                  {[&#10;                    {&#10;                      icon: &lt;Brain size={16} /&gt;,&#10;                      title: 'AI-Powered Planning',&#10;                      desc: 'Generate smart, adaptive roadmaps for any project.',&#10;                    },&#10;                    {&#10;                      icon: &lt;Target size={16} /&gt;,&#10;                      title: 'Goal Tracking',&#10;                      desc: 'Set milestones and monitor progress with intelligent insights.',&#10;                    },&#10;                    {&#10;                      icon: &lt;Zap size={16} /&gt;,&#10;                      title: 'Instant Suggestions',&#10;                      desc: 'Get actionable steps and recommendations from AI.',&#10;                    },&#10;                    {&#10;                      icon: &lt;CheckCircle size={16} /&gt;,&#10;                      title: 'Collaboration',&#10;                      desc: 'Work with your team in real-time to build and refine your roadmap.',&#10;                    },&#10;                  ].map(({ icon, title, desc }, i) =&gt; (&#10;                    &lt;div&#10;                      key={i}&#10;                      className=&quot;feature-item animate-fadeInUp flex items-center&quot;&#10;                      style={{ animationDelay: `${0.2 * (i + 1)}s` }}&#10;                    &gt;&#10;                      &lt;div className=&quot;mr-4 flex h-8 w-8 items-center justify-center rounded-lg bg-white/20 text-white backdrop-blur-sm&quot;&gt;&#10;                        {icon}&#10;                      &lt;/div&gt;&#10;                      &lt;div&gt;&#10;                        &lt;div className=&quot;font-semibold&quot;&gt;{title}&lt;/div&gt;&#10;                        &lt;div className=&quot;text-sm opacity-70&quot;&gt;{desc}&lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  ))}&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            {/* Right Side */}&#10;            &lt;div className=&quot;flex flex-col justify-center p-12&quot;&gt;&#10;              &lt;div className=&quot;mx-auto w-full max-w-md&quot;&gt;&#10;                &lt;div className=&quot;mb-8 text-center&quot;&gt;&#10;                  &lt;h2 className=&quot;text-3xl font-light uppercase&quot;&gt;&#10;                    Welcome back&#10;                  &lt;/h2&gt;&#10;                  &lt;p className=&quot;mt-2 text-sm text-stone-600&quot;&gt;&#10;                    Sign up to continue your creative journey&#10;                  &lt;/p&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;form onSubmit={handleSubmit} className=&quot;space-y-6&quot;&gt;&#10;                  &lt;div&gt;&#10;                    &lt;label&#10;                      htmlFor=&quot;name&quot;&#10;                      className=&quot;mb-2 block text-sm font-medium uppercase&quot;&#10;                    &gt;&#10;                      Name&#10;                    &lt;/label&gt;&#10;                    &lt;div className=&quot;relative&quot;&gt;&#10;                      &lt;div className=&quot;pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3&quot;&gt;&#10;                        {/* You can use a user icon here if desired */}&#10;                      &lt;/div&gt;&#10;                      &lt;input&#10;                        id=&quot;name&quot;&#10;                        type=&quot;text&quot;&#10;                        value={name}&#10;                        onChange={(e) =&gt; setName(e.target.value)}&#10;                        required&#10;                        className=&quot;border-border bg-input block w-full rounded-lg border py-3 pr-3 pl-10 text-sm&quot;&#10;                        placeholder=&quot;Enter your name&quot;&#10;                      /&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div&gt;&#10;                    &lt;label&#10;                      htmlFor=&quot;email&quot;&#10;                      className=&quot;mb-2 block text-sm font-medium uppercase&quot;&#10;                    &gt;&#10;                      Email address&#10;                    &lt;/label&gt;&#10;                    &lt;div className=&quot;relative&quot;&gt;&#10;                      &lt;div className=&quot;pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3&quot;&gt;&#10;                        &lt;Mail className=&quot;h-5 w-5 text-gray-400&quot; /&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;input&#10;                        id=&quot;email&quot;&#10;                        type=&quot;email&quot;&#10;                        value={email}&#10;                        onChange={(e) =&gt; setEmail(e.target.value)}&#10;                        required&#10;                        className=&quot;border-border bg-input block w-full rounded-lg border py-3 pr-3 pl-10 text-sm&quot;&#10;                        placeholder=&quot;Enter your email&quot;&#10;                      /&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div&gt;&#10;                    &lt;label&#10;                      htmlFor=&quot;password&quot;&#10;                      className=&quot;mb-2 block text-sm font-medium uppercase&quot;&#10;                    &gt;&#10;                      Password&#10;                    &lt;/label&gt;&#10;                    &lt;div className=&quot;relative&quot;&gt;&#10;                      &lt;div className=&quot;pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3&quot;&gt;&#10;                        &lt;Lock className=&quot;h-5 w-5 text-gray-400&quot; /&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;input&#10;                        id=&quot;password&quot;&#10;                        type={showPassword ? 'text' : 'password'}&#10;                        value={password}&#10;                        onChange={(e) =&gt; setPassword(e.target.value)}&#10;                        required&#10;                        className=&quot;border-border bg-input block w-full rounded-lg border py-3 pr-12 pl-10 text-sm&quot;&#10;                        placeholder=&quot;Enter your password&quot;&#10;                      /&gt;&#10;                      &lt;button&#10;                        type=&quot;button&quot;&#10;                        className=&quot;absolute inset-y-0 right-0 flex items-center pr-3&quot;&#10;                        onClick={() =&gt; setShowPassword(!showPassword)}&#10;                      &gt;&#10;                        {showPassword ? (&#10;                          &lt;EyeOff className=&quot;h-5 w-5 text-gray-400&quot; /&gt;&#10;                        ) : (&#10;                          &lt;Eye className=&quot;h-5 w-5 text-gray-400&quot; /&gt;&#10;                        )}&#10;                      &lt;/button&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;                    &lt;label className=&quot;text-muted-foreground flex items-center text-sm&quot;&gt;&#10;                      &lt;input&#10;                        type=&quot;checkbox&quot;&#10;                        className=&quot;border-border text-primary h-4 w-4 rounded&quot;&#10;                      /&gt;&#10;                      &lt;span className=&quot;ml-2&quot;&gt;Remember me&lt;/span&gt;&#10;                    &lt;/label&gt;&#10;                    &lt;a&#10;                      href=&quot;#&quot;&#10;                      className=&quot;text-primary hover:text-primary/80 text-sm&quot;&#10;                    &gt;&#10;                      Forgot password?&#10;                    &lt;/a&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;button&#10;                    type=&quot;submit&quot;&#10;                    className=&quot;login-btn relative flex w-full items-center justify-center rounded-lg px-4 py-3 text-sm font-medium text-white transition-all duration-300&quot;&#10;                    disabled={loading}&#10;                  &gt;&#10;                    {loading ? (&#10;                      &lt;&gt;&#10;                        &lt;Loader2 className=&quot;h-5 w-5 animate-spin&quot; /&gt;&#10;                        &lt;span className=&quot;ml-2&quot;&gt;Signing up...&lt;/span&gt;&#10;                      &lt;/&gt;&#10;                    ) : (&#10;                      'Sign up to your account'&#10;                    )}&#10;                  &lt;/button&gt;&#10;&#10;                  &lt;div className=&quot;relative text-center text-sm text-stone-500&quot;&gt;&#10;                    &lt;div className=&quot;absolute inset-0 flex items-center&quot;&gt;&#10;                      &lt;div className=&quot;border-border w-full border-t&quot;&gt;&lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;span className=&quot;relative px-2&quot;&gt;Or continue with&lt;/span&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div className=&quot;grid grid-cols-2 gap-3&quot;&gt;&#10;                    &lt;button&#10;                      type=&quot;button&quot;&#10;                      className=&quot;border-border bg-secondary text-foreground hover:bg-secondary/80 flex items-center justify-center rounded-lg border px-4 py-2.5 text-sm shadow-sm&quot;&#10;                    &gt;&#10;                      &lt;img&#10;                        src=&quot;https://www.svgrepo.com/show/475656/google-color.svg&quot;&#10;                        className=&quot;h-5 w-5&quot;&#10;                        alt=&quot;Google&quot;&#10;                      /&gt;&#10;                      &lt;span className=&quot;ml-2&quot;&gt;Google&lt;/span&gt;&#10;                    &lt;/button&gt;&#10;                    &lt;button&#10;                      type=&quot;button&quot;&#10;                      className=&quot;border-border bg-secondary text-foreground hover:bg-secondary/80 flex items-center justify-center rounded-lg border px-4 py-2.5 text-sm shadow-sm&quot;&#10;                    &gt;&#10;                      &lt;Github className=&quot;h-5 w-5&quot; /&gt;&#10;                      &lt;span className=&quot;ml-2&quot;&gt;GitHub&lt;/span&gt;&#10;                    &lt;/button&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/form&gt;&#10;&#10;                &lt;div className=&quot;text-muted-foreground mt-8 text-center text-sm&quot;&gt;&#10;                  Don&amp;apos;t have an account?{' '}&#10;                  &lt;a href=&quot;#&quot; className=&quot;text-primary hover:text-primary/80&quot;&gt;&#10;                    Sign up for free&#10;                  &lt;/a&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/components/mvpblocks/login-form-3.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/components/mvpblocks/login-form-3.tsx" />
              <option name="originalContent" value="'use client';&#10;&#10;import { useState } from 'react';&#10;import {&#10;  Mail,&#10;  Lock,&#10;  Eye,&#10;  EyeOff,&#10;  Loader2,&#10;  Palette,&#10;  Users,&#10;  Cloud,&#10;  ShieldCheck,&#10;  Github,&#10;} from 'lucide-react';&#10;&#10;export default function SignInPage() {&#10;  const [email, setEmail] = useState('');&#10;  const [password, setPassword] = useState('');&#10;  const [showPassword, setShowPassword] = useState(false);&#10;  const [loading, setLoading] = useState(false);&#10;&#10;  const handleSubmit = (e: React.FormEvent) =&gt; {&#10;    e.preventDefault();&#10;    setLoading(true);&#10;    setTimeout(() =&gt; {&#10;      alert('Login successful! (This is a demo)');&#10;      setLoading(false);&#10;    }, 2000);&#10;  };&#10;&#10;  return (&#10;    &lt;div className=&quot;relative flex min-h-screen w-full items-center justify-center overflow-hidden p-4&quot;&gt;&#10;      &lt;style jsx&gt;{`&#10;        .login-btn {&#10;          background: linear-gradient(&#10;            135deg,&#10;            var(--color-Primary) 0%,&#10;            var(--color-Accent) 50%,&#10;            var(--color-Secondary) 100%&#10;          );&#10;          position: relative;&#10;          overflow: hidden;&#10;        }&#10;        .login-btn::before {&#10;          content: '';&#10;          position: absolute;&#10;          top: 0;&#10;          left: -100%;&#10;          width: 100%;&#10;          height: 100%;&#10;          background: linear-gradient(&#10;            90deg,&#10;            transparent,&#10;            rgba(182, 245, 0, 0.25),&#10;            rgba(152, 205, 0, 0.25),&#10;            transparent&#10;          );&#10;          transition: left 0.5s;&#10;        }&#10;        .login-btn:hover {&#10;          background: linear-gradient(135deg, var(--color-Accent) 0%, var(--color-Primary) 100%);&#10;        }&#10;        .login-btn:hover::before {&#10;          left: 100%;&#10;        }&#10;      `}&lt;/style&gt;&#10;&#10;      &lt;div className=&quot;z-10 w-full max-w-6xl&quot;&gt;&#10;        &lt;div className=&quot;bg-[var(--color-Secondary)]/60 overflow-hidden rounded-[40px] shadow-2xl border-4 border-[var(--color-Accent)]&quot;&gt;&#10;          &lt;div className=&quot;grid min-h-[700px] lg:grid-cols-2 bg-[var(--color-Background)]&quot;&gt;&#10;            {/* Left Side */}&#10;            &lt;div className=&quot;brand-side relative m-4 rounded-3xl bg-[url('https://cdn.midjourney.com/299f94f9-ecb9-4b26-bead-010b8d8b01d9/0_0.png?w=800&amp;q=80')] bg-cover p-12 text-[var(--color-Neutral2)] shadow-lg border-2 border-[var(--color-Primary)]&quot;&gt;&#10;              &lt;div&gt;&#10;                &lt;div className=&quot;mb-12 text-lg font-semibold uppercase text-[var(--color-Primary)] drop-shadow-lg&quot;&gt;&#10;                  {/*PixelForge Studio*/}&#10;                &lt;/div&gt;&#10;                &lt;h1 className=&quot;mb-4 text-6xl font-medium text-[var(--color-Neutral)]&quot;&gt;&#10;                  Create, Design, and Innovate&#10;                &lt;/h1&gt;&#10;                &lt;p className=&quot;mb-12 text-xl opacity-80 text-[var(--color-Neutral2)]&quot;&gt;&#10;                  Join thousands of creators who trust PixelForge Studio to&#10;                  bring their vision to life&#10;                &lt;/p&gt;&#10;&#10;                &lt;div className=&quot;space-y-6&quot;&gt;&#10;                  {[&#10;                    {&#10;                      icon: &lt;Palette size={16} /&gt;,&#10;                      title: 'Advanced Design Tools',&#10;                      desc: 'Professional-grade tools for every project',&#10;                    },&#10;                    {&#10;                      icon: &lt;Users size={16} /&gt;,&#10;                      title: 'Team Collaboration',&#10;                      desc: 'Work together seamlessly in real-time',&#10;                    },&#10;                    {&#10;                      icon: &lt;Cloud size={16} /&gt;,&#10;                      title: 'Cloud Storage',&#10;                      desc: 'Access your projects from anywhere',&#10;                    },&#10;                    {&#10;                      icon: &lt;ShieldCheck size={16} /&gt;,&#10;                      title: 'Enterprise Security',&#10;                      desc: 'Bank-level security for your data',&#10;                    },&#10;                  ].map(({ icon, title, desc }, i) =&gt; (&#10;                    &lt;div&#10;                      key={i}&#10;                      className=&quot;feature-item animate-fadeInUp flex items-center&quot;&#10;                      style={{ animationDelay: `${0.2 * (i + 1)}s` }}&#10;                    &gt;&#10;                      &lt;div className=&quot;mr-4 flex h-8 w-8 items-center justify-center rounded-lg bg-white/20 text-white backdrop-blur-sm&quot;&gt;&#10;                        {icon}&#10;                      &lt;/div&gt;&#10;                      &lt;div&gt;&#10;                        &lt;div className=&quot;font-semibold&quot;&gt;{title}&lt;/div&gt;&#10;                        &lt;div className=&quot;text-sm opacity-70&quot;&gt;{desc}&lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  ))}&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            {/* Right Side */}&#10;            &lt;div className=&quot;flex flex-col justify-center p-12&quot;&gt;&#10;              &lt;div className=&quot;mx-auto w-full max-w-md&quot;&gt;&#10;                &lt;div className=&quot;mb-8 text-center&quot;&gt;&#10;                  &lt;h2 className=&quot;text-3xl font-light uppercase&quot;&gt;&#10;                    Welcome back&#10;                  &lt;/h2&gt;&#10;                  &lt;p className=&quot;mt-2 text-sm text-stone-600&quot;&gt;&#10;                    Sign in to continue your creative journey&#10;                  &lt;/p&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;form onSubmit={handleSubmit} className=&quot;space-y-6&quot;&gt;&#10;                  &lt;div&gt;&#10;                    &lt;label&#10;                      htmlFor=&quot;email&quot;&#10;                      className=&quot;mb-2 block text-sm font-medium uppercase&quot;&#10;                    &gt;&#10;                      Email address&#10;                    &lt;/label&gt;&#10;                    &lt;div className=&quot;relative&quot;&gt;&#10;                      &lt;div className=&quot;pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3&quot;&gt;&#10;                        &lt;Mail className=&quot;h-5 w-5 text-gray-400&quot; /&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;input&#10;                        id=&quot;email&quot;&#10;                        type=&quot;email&quot;&#10;                        value={email}&#10;                        onChange={(e) =&gt; setEmail(e.target.value)}&#10;                        required&#10;                        className=&quot;border-border bg-input block w-full rounded-lg border py-3 pr-3 pl-10 text-sm&quot;&#10;                        placeholder=&quot;Enter your email&quot;&#10;                      /&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div&gt;&#10;                    &lt;label&#10;                      htmlFor=&quot;password&quot;&#10;                      className=&quot;mb-2 block text-sm font-medium uppercase&quot;&#10;                    &gt;&#10;                      Password&#10;                    &lt;/label&gt;&#10;                    &lt;div className=&quot;relative&quot;&gt;&#10;                      &lt;div className=&quot;pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3&quot;&gt;&#10;                        &lt;Lock className=&quot;h-5 w-5 text-gray-400&quot; /&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;input&#10;                        id=&quot;password&quot;&#10;                        type={showPassword ? 'text' : 'password'}&#10;                        value={password}&#10;                        onChange={(e) =&gt; setPassword(e.target.value)}&#10;                        required&#10;                        className=&quot;border-border bg-input block w-full rounded-lg border py-3 pr-12 pl-10 text-sm&quot;&#10;                        placeholder=&quot;Enter your password&quot;&#10;                      /&gt;&#10;                      &lt;button&#10;                        type=&quot;button&quot;&#10;                        className=&quot;absolute inset-y-0 right-0 flex items-center pr-3&quot;&#10;                        onClick={() =&gt; setShowPassword(!showPassword)}&#10;                      &gt;&#10;                        {showPassword ? (&#10;                          &lt;EyeOff className=&quot;h-5 w-5 text-gray-400&quot; /&gt;&#10;                        ) : (&#10;                          &lt;Eye className=&quot;h-5 w-5 text-gray-400&quot; /&gt;&#10;                        )}&#10;                      &lt;/button&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;                    &lt;label className=&quot;text-muted-foreground flex items-center text-sm&quot;&gt;&#10;                      &lt;input&#10;                        type=&quot;checkbox&quot;&#10;                        className=&quot;border-border text-primary h-4 w-4 rounded&quot;&#10;                      /&gt;&#10;                      &lt;span className=&quot;ml-2&quot;&gt;Remember me&lt;/span&gt;&#10;                    &lt;/label&gt;&#10;                    &lt;a&#10;                      href=&quot;#&quot;&#10;                      className=&quot;text-primary hover:text-primary/80 text-sm&quot;&#10;                    &gt;&#10;                      Forgot password?&#10;                    &lt;/a&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;button&#10;                    type=&quot;submit&quot;&#10;                    className=&quot;login-btn relative flex w-full items-center justify-center rounded-lg px-4 py-3 text-sm font-medium text-white transition-all duration-300&quot;&#10;                    disabled={loading}&#10;                  &gt;&#10;                    {loading ? (&#10;                      &lt;&gt;&#10;                        &lt;Loader2 className=&quot;h-5 w-5 animate-spin&quot; /&gt;&#10;                        &lt;span className=&quot;ml-2&quot;&gt;Signing in...&lt;/span&gt;&#10;                      &lt;/&gt;&#10;                    ) : (&#10;                      'Sign in to your account'&#10;                    )}&#10;                  &lt;/button&gt;&#10;&#10;                  &lt;div className=&quot;relative text-center text-sm text-stone-500&quot;&gt;&#10;                    &lt;div className=&quot;absolute inset-0 flex items-center&quot;&gt;&#10;                      &lt;div className=&quot;border-border w-full border-t&quot;&gt;&lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;span className=&quot;relative px-2&quot;&gt;Or continue with&lt;/span&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div className=&quot;grid grid-cols-2 gap-3&quot;&gt;&#10;                    &lt;button&#10;                      type=&quot;button&quot;&#10;                      className=&quot;border-border bg-secondary text-foreground hover:bg-secondary/80 flex items-center justify-center rounded-lg border px-4 py-2.5 text-sm shadow-sm&quot;&#10;                    &gt;&#10;                      &lt;img&#10;                        src=&quot;https://www.svgrepo.com/show/475656/google-color.svg&quot;&#10;                        className=&quot;h-5 w-5&quot;&#10;                        alt=&quot;Google&quot;&#10;                      /&gt;&#10;                      &lt;span className=&quot;ml-2&quot;&gt;Google&lt;/span&gt;&#10;                    &lt;/button&gt;&#10;                    &lt;button&#10;                      type=&quot;button&quot;&#10;                      className=&quot;border-border bg-secondary text-foreground hover:bg-secondary/80 flex items-center justify-center rounded-lg border px-4 py-2.5 text-sm shadow-sm&quot;&#10;                    &gt;&#10;                      &lt;Github className=&quot;h-5 w-5&quot; /&gt;&#10;                      &lt;span className=&quot;ml-2&quot;&gt;GitHub&lt;/span&gt;&#10;                    &lt;/button&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/form&gt;&#10;&#10;                &lt;div className=&quot;text-muted-foreground mt-8 text-center text-sm&quot;&gt;&#10;                  Don&amp;apos;t have an account?{' '}&#10;                  &lt;a href=&quot;#&quot; className=&quot;text-primary hover:text-primary/80&quot;&gt;&#10;                    Sign up for free&#10;                  &lt;/a&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}&#10;" />
              <option name="updatedContent" value="'use client';&#10;&#10;import { useState } from 'react';&#10;import {&#10;  Mail,&#10;  Lock,&#10;  Eye,&#10;  EyeOff,&#10;  Loader2,&#10;  Brain,&#10;  Target,&#10;  Zap,&#10;  CheckCircle,&#10;  Github,&#10;} from 'lucide-react';&#10;&#10;export default function SignInPage() {&#10;  const [email, setEmail] = useState('');&#10;  const [password, setPassword] = useState('');&#10;  const [showPassword, setShowPassword] = useState(false);&#10;  const [loading, setLoading] = useState(false);&#10;&#10;  const handleSubmit = (e: React.FormEvent) =&gt; {&#10;    e.preventDefault();&#10;    setLoading(true);&#10;    setTimeout(() =&gt; {&#10;      alert('Login successful! (This is a demo)');&#10;      setLoading(false);&#10;    }, 2000);&#10;  };&#10;&#10;  return (&#10;    &lt;div className=&quot;relative flex min-h-screen w-full items-center justify-center overflow-hidden p-4&quot;&gt;&#10;      &lt;style jsx&gt;{`&#10;        .login-btn {&#10;          background: linear-gradient(&#10;            135deg,&#10;            var(--color-Primary) 0%,&#10;            var(--color-Accent) 50%,&#10;            var(--color-Secondary) 100%&#10;          );&#10;          position: relative;&#10;          overflow: hidden;&#10;        }&#10;        .login-btn::before {&#10;          content: '';&#10;          position: absolute;&#10;          top: 0;&#10;          left: -100%;&#10;          width: 100%;&#10;          height: 100%;&#10;          background: linear-gradient(&#10;            90deg,&#10;            transparent,&#10;            rgba(182, 245, 0, 0.25),&#10;            rgba(152, 205, 0, 0.25),&#10;            transparent&#10;          );&#10;          transition: left 0.5s;&#10;        }&#10;        .login-btn:hover {&#10;          background: linear-gradient(135deg, var(--color-Accent) 0%, var(--color-Primary) 100%);&#10;        }&#10;        .login-btn:hover::before {&#10;          left: 100%;&#10;        }&#10;      `}&lt;/style&gt;&#10;&#10;      &lt;div className=&quot;z-10 w-full max-w-6xl&quot;&gt;&#10;        &lt;div className=&quot;bg-[var(--color-Secondary)]/60 overflow-hidden rounded-[40px] shadow-2xl border-4 border-[var(--color-Accent)]&quot;&gt;&#10;          &lt;div className=&quot;grid min-h-[700px] lg:grid-cols-2 bg-[var(--color-Background)]&quot;&gt;&#10;            {/* Left Side */}&#10;            &lt;div className=&quot;brand-side relative m-4 rounded-3xl bg-[url('https://cdn.midjourney.com/299f94f9-ecb9-4b26-bead-010b8d8b01d9/0_0.png?w=800&amp;q=80')] bg-cover p-12 text-[var(--color-Neutral2)] shadow-lg border-2 border-[var(--color-Primary)]&quot;&gt;&#10;              &lt;div&gt;&#10;                &lt;div className=&quot;mb-12 text-lg font-semibold uppercase text-[var(--color-Primary)] drop-shadow-lg&quot;&gt;&#10;                  {/*PixelForge Studio*/}&#10;                &lt;/div&gt;&#10;                &lt;h1 className=&quot;mb-4 text-6xl font-medium text-[var(--color-Neutral)]&quot;&gt;&#10;                  Create, Design, and Innovate&#10;                &lt;/h1&gt;&#10;                &lt;p className=&quot;mb-12 text-xl opacity-80 text-[var(--color-Neutral2)]&quot;&gt;&#10;                  Join thousands of creators who trust PixelForge Studio to&#10;                  bring their vision to life&#10;                &lt;/p&gt;&#10;&#10;                &lt;div className=&quot;space-y-6&quot;&gt;&#10;                  {[&#10;                    {&#10;                      icon: &lt;Brain size={16} /&gt;,&#10;                      title: 'AI-Powered Planning',&#10;                      desc: 'Generate smart, adaptive roadmaps for any project.',&#10;                    },&#10;                    {&#10;                      icon: &lt;Target size={16} /&gt;,&#10;                      title: 'Goal Tracking',&#10;                      desc: 'Set milestones and monitor progress with intelligent insights.',&#10;                    },&#10;                    {&#10;                      icon: &lt;Zap size={16} /&gt;,&#10;                      title: 'Instant Suggestions',&#10;                      desc: 'Get actionable steps and recommendations from AI.',&#10;                    },&#10;                    {&#10;                      icon: &lt;CheckCircle size={16} /&gt;,&#10;                      title: 'Collaboration',&#10;                      desc: 'Work with your team in real-time to build and refine your roadmap.',&#10;                    },&#10;                  ].map(({ icon, title, desc }, i) =&gt; (&#10;                    &lt;div&#10;                      key={i}&#10;                      className=&quot;feature-item animate-fadeInUp flex items-center&quot;&#10;                      style={{ animationDelay: `${0.2 * (i + 1)}s` }}&#10;                    &gt;&#10;                      &lt;div className=&quot;mr-4 flex h-8 w-8 items-center justify-center rounded-lg bg-white/20 text-white backdrop-blur-sm&quot;&gt;&#10;                        {icon}&#10;                      &lt;/div&gt;&#10;                      &lt;div&gt;&#10;                        &lt;div className=&quot;font-semibold&quot;&gt;{title}&lt;/div&gt;&#10;                        &lt;div className=&quot;text-sm opacity-70&quot;&gt;{desc}&lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  ))}&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            {/* Right Side */}&#10;            &lt;div className=&quot;flex flex-col justify-center p-12&quot;&gt;&#10;              &lt;div className=&quot;mx-auto w-full max-w-md&quot;&gt;&#10;                &lt;div className=&quot;mb-8 text-center&quot;&gt;&#10;                  &lt;h2 className=&quot;text-3xl font-light uppercase&quot;&gt;&#10;                    Welcome back&#10;                  &lt;/h2&gt;&#10;                  &lt;p className=&quot;mt-2 text-sm text-stone-600&quot;&gt;&#10;                    Sign in to continue your creative journey&#10;                  &lt;/p&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;form onSubmit={handleSubmit} className=&quot;space-y-6&quot;&gt;&#10;                  &lt;div&gt;&#10;                    &lt;label&#10;                      htmlFor=&quot;email&quot;&#10;                      className=&quot;mb-2 block text-sm font-medium uppercase&quot;&#10;                    &gt;&#10;                      Email address&#10;                    &lt;/label&gt;&#10;                    &lt;div className=&quot;relative&quot;&gt;&#10;                      &lt;div className=&quot;pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3&quot;&gt;&#10;                        &lt;Mail className=&quot;h-5 w-5 text-gray-400&quot; /&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;input&#10;                        id=&quot;email&quot;&#10;                        type=&quot;email&quot;&#10;                        value={email}&#10;                        onChange={(e) =&gt; setEmail(e.target.value)}&#10;                        required&#10;                        className=&quot;border-border bg-input block w-full rounded-lg border py-3 pr-3 pl-10 text-sm&quot;&#10;                        placeholder=&quot;Enter your email&quot;&#10;                      /&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div&gt;&#10;                    &lt;label&#10;                      htmlFor=&quot;password&quot;&#10;                      className=&quot;mb-2 block text-sm font-medium uppercase&quot;&#10;                    &gt;&#10;                      Password&#10;                    &lt;/label&gt;&#10;                    &lt;div className=&quot;relative&quot;&gt;&#10;                      &lt;div className=&quot;pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3&quot;&gt;&#10;                        &lt;Lock className=&quot;h-5 w-5 text-gray-400&quot; /&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;input&#10;                        id=&quot;password&quot;&#10;                        type={showPassword ? 'text' : 'password'}&#10;                        value={password}&#10;                        onChange={(e) =&gt; setPassword(e.target.value)}&#10;                        required&#10;                        className=&quot;border-border bg-input block w-full rounded-lg border py-3 pr-12 pl-10 text-sm&quot;&#10;                        placeholder=&quot;Enter your password&quot;&#10;                      /&gt;&#10;                      &lt;button&#10;                        type=&quot;button&quot;&#10;                        className=&quot;absolute inset-y-0 right-0 flex items-center pr-3&quot;&#10;                        onClick={() =&gt; setShowPassword(!showPassword)}&#10;                      &gt;&#10;                        {showPassword ? (&#10;                          &lt;EyeOff className=&quot;h-5 w-5 text-gray-400&quot; /&gt;&#10;                        ) : (&#10;                          &lt;Eye className=&quot;h-5 w-5 text-gray-400&quot; /&gt;&#10;                        )}&#10;                      &lt;/button&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;                    &lt;label className=&quot;text-muted-foreground flex items-center text-sm&quot;&gt;&#10;                      &lt;input&#10;                        type=&quot;checkbox&quot;&#10;                        className=&quot;border-border text-primary h-4 w-4 rounded&quot;&#10;                      /&gt;&#10;                      &lt;span className=&quot;ml-2&quot;&gt;Remember me&lt;/span&gt;&#10;                    &lt;/label&gt;&#10;                    &lt;a&#10;                      href=&quot;#&quot;&#10;                      className=&quot;text-primary hover:text-primary/80 text-sm&quot;&#10;                    &gt;&#10;                      Forgot password?&#10;                    &lt;/a&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;button&#10;                    type=&quot;submit&quot;&#10;                    className=&quot;login-btn relative flex w-full items-center justify-center rounded-lg px-4 py-3 text-sm font-medium text-white transition-all duration-300&quot;&#10;                    disabled={loading}&#10;                  &gt;&#10;                    {loading ? (&#10;                      &lt;&gt;&#10;                        &lt;Loader2 className=&quot;h-5 w-5 animate-spin&quot; /&gt;&#10;                        &lt;span className=&quot;ml-2&quot;&gt;Signing in...&lt;/span&gt;&#10;                      &lt;/&gt;&#10;                    ) : (&#10;                      'Sign in to your account'&#10;                    )}&#10;                  &lt;/button&gt;&#10;&#10;                  &lt;div className=&quot;relative text-center text-sm text-stone-500&quot;&gt;&#10;                    &lt;div className=&quot;absolute inset-0 flex items-center&quot;&gt;&#10;                      &lt;div className=&quot;border-border w-full border-t&quot;&gt;&lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;span className=&quot;relative px-2&quot;&gt;Or continue with&lt;/span&gt;&#10;                  &lt;/div&gt;&#10;&#10;                  &lt;div className=&quot;grid grid-cols-2 gap-3&quot;&gt;&#10;                    &lt;button&#10;                      type=&quot;button&quot;&#10;                      className=&quot;border-border bg-secondary text-foreground hover:bg-secondary/80 flex items-center justify-center rounded-lg border px-4 py-2.5 text-sm shadow-sm&quot;&#10;                    &gt;&#10;                      &lt;img&#10;                        src=&quot;https://www.svgrepo.com/show/475656/google-color.svg&quot;&#10;                        className=&quot;h-5 w-5&quot;&#10;                        alt=&quot;Google&quot;&#10;                      /&gt;&#10;                      &lt;span className=&quot;ml-2&quot;&gt;Google&lt;/span&gt;&#10;                    &lt;/button&gt;&#10;                    &lt;button&#10;                      type=&quot;button&quot;&#10;                      className=&quot;border-border bg-secondary text-foreground hover:bg-secondary/80 flex items-center justify-center rounded-lg border px-4 py-2.5 text-sm shadow-sm&quot;&#10;                    &gt;&#10;                      &lt;Github className=&quot;h-5 w-5&quot; /&gt;&#10;                      &lt;span className=&quot;ml-2&quot;&gt;GitHub&lt;/span&gt;&#10;                    &lt;/button&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/form&gt;&#10;&#10;                &lt;div className=&quot;text-muted-foreground mt-8 text-center text-sm&quot;&gt;&#10;                  Don&amp;apos;t have an account?{' '}&#10;                  &lt;a href=&quot;#&quot; className=&quot;text-primary hover:text-primary/80&quot;&gt;&#10;                    Sign up for free&#10;                  &lt;/a&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/components/mvpblocks/v0-chat.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/components/mvpblocks/v0-chat.tsx" />
              <option name="originalContent" value="'use client';&#10;&#10;import { useState } from 'react';&#10;import { Textarea } from '@/components/ui/textarea';&#10;import { cn } from '@/lib/utils';&#10;import { useAutoResizeTextarea } from '@/hooks/use-auto-resize-textarea';&#10;import {&#10;  ImageIcon,&#10;  FileUp,&#10;  Figma,&#10;  MonitorIcon,&#10;  CircleUserRound,&#10;  ArrowUpIcon,&#10;  Paperclip,&#10;  PlusIcon,&#10;} from 'lucide-react';&#10;import { Button } from '@/components/ui/button';&#10;&#10;export function VercelV0Chat() {&#10;  const [value, setValue] = useState('');&#10;  const { textareaRef, adjustHeight } = useAutoResizeTextarea({&#10;    minHeight: 60,&#10;    maxHeight: 200,&#10;  });&#10;&#10;  const handleKeyDown = (e: React.KeyboardEvent&lt;HTMLTextAreaElement&gt;) =&gt; {&#10;    if (e.key === 'Enter' &amp;&amp; !e.shiftKey) {&#10;      e.preventDefault();&#10;      if (value.trim()) {&#10;        setValue('');&#10;        adjustHeight(true);&#10;      }&#10;    }&#10;  };&#10;&#10;  return (&#10;    &lt;div className=&quot;w-full max-w-4xl flex flex-col items-center space-y-4 sm:space-y-8&quot;&gt;&#10;      &lt;h1 className=&quot;text-foreground text-center text-2xl font-bold sm:text-4xl&quot;&gt;&#10;        What can I help you ship?&#10;      &lt;/h1&gt;&#10;&#10;      &lt;div className=&quot;w-full&quot;&gt;&#10;        &lt;div className=&quot;border-border bg-secondary/20 relative rounded-xl border&quot;&gt;&#10;          &lt;div className=&quot;overflow-y-auto&quot;&gt;&#10;            &lt;Textarea&#10;              ref={textareaRef}&#10;              value={value}&#10;              onChange={(e) =&gt; {&#10;                setValue(e.target.value);&#10;                adjustHeight();&#10;              }}&#10;              onKeyDown={handleKeyDown}&#10;              placeholder=&quot;Ask v0 a question...&quot;&#10;              className={cn(&#10;                'w-full px-4 py-3',&#10;                'resize-none',&#10;                'bg-transparent',&#10;                'border-none',&#10;                'text-sm',&#10;                'focus:outline-none',&#10;                'focus-visible:ring-0 focus-visible:ring-offset-0',&#10;                'placeholder:text-sm',&#10;                'min-h-[60px]',&#10;              )}&#10;              style={{&#10;                overflow: 'hidden',&#10;              }}&#10;            /&gt;&#10;          &lt;/div&gt;&#10;&#10;          &lt;div className=&quot;flex items-center justify-between p-3&quot;&gt;&#10;            &lt;div className=&quot;flex items-center gap-2&quot;&gt;&#10;              &lt;Button&#10;                type=&quot;button&quot;&#10;                size=&quot;sm&quot;&#10;                variant=&quot;outline&quot;&#10;                className=&quot;group hover:bg-secondary/50 flex items-center gap-1 rounded-lg p-2&quot;&#10;              &gt;&#10;                &lt;Paperclip className=&quot;h-4 w-4&quot; /&gt;&#10;                &lt;span className=&quot;hidden text-xs transition-opacity group-hover:inline&quot;&gt;&#10;                  Attach&#10;                &lt;/span&gt;&#10;              &lt;/Button&gt;&#10;            &lt;/div&gt;&#10;            &lt;div className=&quot;flex items-center gap-2&quot;&gt;&#10;              &lt;Button&#10;                type=&quot;button&quot;&#10;                size=&quot;sm&quot;&#10;                variant=&quot;secondary&quot;&#10;                className=&quot;border-border flex items-center justify-between gap-1 rounded-lg border border-dashed px-2 py-1 text-sm transition-colors&quot;&#10;              &gt;&#10;                &lt;PlusIcon className=&quot;h-4 w-4&quot; /&gt;&#10;                Project&#10;              &lt;/Button&gt;&#10;              &lt;button&#10;                type=&quot;button&quot;&#10;                className={cn(&#10;                  'border-border flex items-center justify-between gap-1 rounded-lg border px-1.5 py-1.5 text-sm transition-colors',&#10;                  value.trim() ? 'bg-white text-black' : 'text-zinc-400',&#10;                )}&#10;              &gt;&#10;                &lt;ArrowUpIcon&#10;                  className={cn(&#10;                    'h-4 w-4',&#10;                    value.trim() ? 'text-black' : 'text-zinc-400',&#10;                  )}&#10;                /&gt;&#10;                &lt;span className=&quot;sr-only&quot;&gt;Send&lt;/span&gt;&#10;              &lt;/button&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;&#10;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}&#10;&#10;&#10;&#10;&#10;&#10;export default VercelV0Chat;&#10;" />
              <option name="updatedContent" value="'use client';&#10;&#10;import { useState } from 'react';&#10;import { Textarea } from '@/components/ui/textarea';&#10;import { cn } from '@/lib/utils';&#10;import { useAutoResizeTextarea } from '@/hooks/use-auto-resize-textarea';&#10;import {&#10;  ImageIcon,&#10;  FileUp,&#10;  Figma,&#10;  MonitorIcon,&#10;  CircleUserRound,&#10;  ArrowUpIcon,&#10;  Paperclip,&#10;  PlusIcon,&#10;} from 'lucide-react';&#10;import { Button } from '@/components/ui/button';&#10;&#10;export function VercelV0Chat() {&#10;  const [value, setValue] = useState('');&#10;  const { textareaRef, adjustHeight } = useAutoResizeTextarea({&#10;    minHeight: 60,&#10;    maxHeight: 200,&#10;  });&#10;&#10;  const handleKeyDown = (e: React.KeyboardEvent&lt;HTMLTextAreaElement&gt;) =&gt; {&#10;    if (e.key === 'Enter' &amp;&amp; !e.shiftKey) {&#10;      e.preventDefault();&#10;      if (value.trim()) {&#10;        setValue('');&#10;        adjustHeight(true);&#10;      }&#10;    }&#10;  };&#10;&#10;  return (&#10;    &lt;div className=&quot;w-full max-w-4xl flex flex-col items-center space-y-4 sm:space-y-8&quot;&gt;&#10;      &lt;h1 className=&quot;text-foreground text-center text-2xl font-bold sm:text-4xl&quot;&gt;&#10;        What can I help you ship?&#10;      &lt;/h1&gt;&#10;&#10;      &lt;div className=&quot;w-full&quot;&gt;&#10;        &lt;div className=&quot;border-border bg-secondary/20 relative rounded-xl border&quot;&gt;&#10;          &lt;div className=&quot;overflow-y-auto&quot;&gt;&#10;            &lt;Textarea&#10;              ref={textareaRef}&#10;              value={value}&#10;              onChange={(e) =&gt; {&#10;                setValue(e.target.value);&#10;                adjustHeight();&#10;              }}&#10;              onKeyDown={handleKeyDown}&#10;              placeholder=&quot;Ask v0 a question...&quot;&#10;              className={cn(&#10;                'w-full px-4 py-3',&#10;                'resize-none',&#10;                'bg-transparent',&#10;                'border-none',&#10;                'text-sm',&#10;                'focus:outline-none',&#10;                'focus-visible:ring-0 focus-visible:ring-offset-0',&#10;                'placeholder:text-sm',&#10;                'min-h-[60px]',&#10;              )}&#10;              style={{&#10;                overflow: 'hidden',&#10;              }}&#10;            /&gt;&#10;          &lt;/div&gt;&#10;&#10;          &lt;div className=&quot;flex items-center justify-between p-3&quot;&gt;&#10;            &lt;div className=&quot;flex items-center gap-2&quot;&gt;&#10;              &lt;Button&#10;                type=&quot;button&quot;&#10;                size=&quot;sm&quot;&#10;                variant=&quot;outline&quot;&#10;                className=&quot;group hover:bg-secondary/50 flex items-center gap-1 rounded-lg p-2&quot;&#10;              &gt;&#10;                &lt;Paperclip className=&quot;h-4 w-4&quot; /&gt;&#10;                &lt;span className=&quot;hidden text-xs transition-opacity group-hover:inline&quot;&gt;&#10;                  Attach&#10;                &lt;/span&gt;&#10;              &lt;/Button&gt;&#10;            &lt;/div&gt;&#10;            &lt;div className=&quot;flex items-center gap-2&quot;&gt;&#10;              &lt;Button&#10;                type=&quot;button&quot;&#10;                size=&quot;sm&quot;&#10;                variant=&quot;secondary&quot;&#10;                className=&quot;border-border flex items-center justify-between gap-1 rounded-lg border border-dashed px-2 py-1 text-sm transition-colors&quot;&#10;              &gt;&#10;                &lt;PlusIcon className=&quot;h-4 w-4&quot; /&gt;&#10;                Project&#10;              &lt;/Button&gt;&#10;              &lt;button&#10;                type=&quot;button&quot;&#10;                className={cn(&#10;                  'border-border flex items-center justify-between gap-1 rounded-lg border px-1.5 py-1.5 text-sm transition-colors',&#10;                  value.trim() ? 'bg-white text-black' : 'text-zinc-400',&#10;                )}&#10;              &gt;&#10;                &lt;ArrowUpIcon&#10;                  className={cn(&#10;                    'h-4 w-4',&#10;                    value.trim() ? 'text-black' : 'text-zinc-400',&#10;                  )}&#10;                /&gt;&#10;                &lt;span className=&quot;sr-only&quot;&gt;Send&lt;/span&gt;&#10;              &lt;/button&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;&#10;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}&#10;&#10;&#10;&#10;&#10;&#10;export default VercelV0Chat;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>